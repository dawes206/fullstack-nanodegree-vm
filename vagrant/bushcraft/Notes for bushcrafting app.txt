Spent forever trying to figure out hwo to make the dang redirect work for the ajax.

At first, the issue was that I didn't import the ajax library into my html. Dumb

Next up, there seems to be a disconnect between what the instructor wants the sign in button to return and what google's default getting started template gives. Fixed this just by ignorming whaat the instructor may want for now.

Finally I confirmed that my ajax requestr was posting to my app succesffully. I tried using a redirect in gconnect to load mygear page. However, even though all the redirecting was working in the network tab, no new screen was ever displayed.

Found something online that suggested to do it from the ajax side, instead of the flask side. In other words, I guess that the ajax request was waiting for a response, and that response WAS the redirect I was trying to do. So, my redirect was being used as a response, not an actual action for the browser to do. So, instead, I made flask send a response to the ajax request, and made ajax move the user along to the proper screen.


So, the login button is "working", in that when users press it and log in, they will be directed to my home page. But, now I have to incorporate all the security features lorenzo mentioned. But, hopefully that won't be TOOOOO bad.
After that facebook login (which should hopefully be in a similar veign to google)
After that it will be on to some more logic for my app, incorporating the user session to let them see only their stuff.
Then logout
Then make it pretty




Got the session state verification working. Now I successfully ahve gotten the access code from within the response from Google. AND I have successfully sent that code to my webserver. Now I just need to figure out how to use it/ send it to google to verify that is the same one that they sent the user/browser/the login webpage

holy crap....
spent about 4 hours trying to verify this damn token. The issue was the damn proxy.
But, even now I'm getting a malformed error. This is horrible.


Finally figured it out. I was tyring to get an access token, but I was using an access token oto get it, not an auth token. The issue was my google sign in already gets the needed access token. It doesn't get an auth token like lorenzo.
After that it was just a matter of sending the token along in a url to a google api to see if it gave anything other than an error. And, it doesn't give an error using the token. If I change the token, then it does give an error. Finally moving on!!

K. quick update.
While tryin gto figure out how to get the user's profile info sent over to my server with the access token, I realieze I was doing user-side authentication, and not server-side. I think the project is meant to be server side, so I decided to redo it. Found ana amazing tutorial online, and it's working, slowly but surely.
First I had to remake the google sign on button, since the default one I was using returned an access token as well as an auth token.
Now it just returns an auth token, just like in Lorenzo's video.
Next I had to create a credentials object to exchange the auth token with an access token.
having done that, it looks like credentials.access_token works, so I think that I may not need the step2_echange thing.
Yeah, I think this is right, because I used the credentials)from)clientsecrets_and_code mehtod of oauth, instead of the oauth flow. 
Boom! Now the test is failing if I modify access tokena nd passing otherwise!


Things to do:
Everything capital
include "store within" in database
center tables
Radio buttons for categories
include "no category" instead of nothing